[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "chromstream"
description="A Python package description goes here."
version = "0.0.1"
readme = "README.md"
license = { text = "MIT" }
authors = [{ name = "Sebastian Rejman", email = "s.rejman@uu.nl" }]
keywords = ["MyKeyword1", "MyKeyword2"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: Unix",
    "Operating System :: MacOS",
]
requires-python = ">=3.9"
dependencies = [
    "ipykernel>=6.30.1",
    "ipympl>=0.9.7",
    "matplotlib>=3.9.4",
    "mkdocs-include-markdown-plugin>=7.1.7",
    "numpy",
    "pandas>=2.3.2",
    "scipy>=1.13.1",
]

[project.optional-dependencies]
dev = ["pytest>=7.4.0", "pytest-cov>=3.0.0", "ruff>=0.0.285"]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-autorefs>=1.4.3", 
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-include-markdown-plugin>=7.1.7",
    "mkdocs-jupyter>=0.25.1",
    "mkdocs-literate-nav>=0.6.2",
    "mkdocs-material>=9.6.19",
    "mkdocstrings>=0.30.0",
    "mkdocstrings-python>=1.18.2",
    "pillow>=10.0.0",
    "cairosvg>=2.7.1"
]

[project.urls]
repository = "https://github.com/Quantum-Accelerators/chromstream"
documentation = "https://quantum-accelerators.github.io/chromstream/"
changelog = "https://github.com/Quantum-Accelerators/chromstream/blob/main/CHANGELOG.md"

[tool.setuptools.package-data]
chromstream = ["py.typed"]

[tool.pyright]
include = ["chromstream"]
exclude = ["**/__pycache__"]
typeCheckingMode = "basic"
reportGeneralTypeIssues = false
reportOptionalMemberAccess = false
reportOptionalSubscript = false
reportOptionalOperand = false

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-p no:warnings", "--import-mode=importlib"]
xfail_strict = true
log_cli_level = "warn"
pythonpath = "src"
testpaths = ["tests"]

[tool.black]
exclude = '''
/(
    \.git
  | \.tox
)/
'''
skip-magic-trailing-comma = true

[tool.isort]
profile = 'black'
skip_gitignore = true

[tool.coverage.run]
source = ["src"]

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:",
    "if __name__ == .__main__.:",
    "except ImportError",
]

[tool.ruff]
lint.select = [
  "A",      # flake8-builtins
  "ARG",    # flake8-unused-arguments
  "ASYNC",  # flake8-async
  "ASYNC1", # flake8-async1
  "B",      # flake8-bugbear
  "C4",     # flake8-comprehensions
  "E",      # pycodestyle error
  "EXE",    # flake8-executable
  "F",      # pyflakes
  "FA",     # flake8-future-annotations
  "FLY",    # flynt
  "I",      # isort
  "ICN",    # flake8-import-conventions
  "INT",    # flake8-gettext
  "ISC",    # flake8-implicit-str-concat
  "NPY",    # numpy-specific rules
  "PD",     # pandas-vet
  "PERF",   # perflint
  "PIE",    # flake8-pie
  "PL",     # pylint
  "PT",     # flake8-pytest-style
  "PYI",    # flake8-pyi
  "RET",    # flake8-return
  "RSE",    # flake8-raise
  "RUF",    # Ruff-specific rules
  "SIM",    # flake8-simplify
  "SLOT",   # flake8-slots
  "T20",    # flake8-print
  "TCH",    # flake8-type-checking
  "TID",    # flake8-tidy-imports
  "UP",     # pyupgrade
  "W",      # pycodestyle warning
  "YTT",    # flake8-2020
]
lint.ignore = [
  "E501",   # Line too long
  "ISC001",   # single-line-implicit-string-concatenation
  "PLR",    # Design related pylint codes
  "PERF203",  # try-except-in-loop
  "RET505", # Unnecessary `elif` after `return`
  "PLC0415", # `import` should be at the top-level of a file
  "I001",
]
lint.unfixable = [
  "T20",  # Removes print statements
  "F841", # Removes unused variables
]
lint.pydocstyle.convention = "numpy"
lint.isort.known-first-party = ["chromstream"]
lint.isort.required-imports = ["from __future__ import annotations"]
lint.isort.split-on-trailing-comma=false
src = ["src"]
extend-include = ["*.ipynb"]

[tool.ruff.format]
docstring-code-format = true
skip-magic-trailing-comma = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**" = ["ANN", "ARG", "D", "E402", "PTH", "S101"]

[tool.docformatter]
pre-summary-newline = true
black = true

[tool.mypy]
ignore_missing_imports = true
namespace_packages = true
explicit_package_bases = true
no_implicit_optional = false
disable_error_code = ["annotation-unchecked", "operator"]
check_untyped_defs = false
disallow_untyped_calls = false
warn_return_any = false

lint.quotes = "double"

[tool.uv.sources]
chromstream = { workspace = true }

[dependency-groups]
docs = [
    "chromstream",
]
